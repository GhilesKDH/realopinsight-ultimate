# ------------------------------------------------------------------------ #
# File: install-sh                                                         #
# Copyright (c) 2010-2014 Rodrigue Chakode (rodrigue.chakode@gmail.com)    #
# Last Update : 06-04-2014                                                 #
#                                                                          #
# This Software is part of RealOpInsight (http://realopinsight.com)        #
#                                                                          #
# This is a free software: you can redistribute it and/or modify           #
# it under the terms of the GNU General Public License as published by     #
# the Free Software Foundation, either version 3 of the License, or        #
# (at your option) any later version.                                      #
#                                                                          #
# The Software is distributed in the hope that it will be useful,          #
# but WITHOUT ANY WARRANTY; without even the implied warranty or           #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the	           #
# GNU General Public License for more details.                             #
#                                                                          #
# You should have received a copy of the GNU General Public License        #
# along with the Software.  If not, see <http://www.gnu.org/licenses/>.	   #
#--------------------------------------------------------------------------#

set -e

APP="ngrt4n"
APP_PREFIX="/usr/local"
VERSION_BKR="1.0"
WT_VERSION=3.3.2
WT_SRC_DIR=wt/extlibs
BASE_BUILD_DIR=`pwd`

# Print help
#
usage()
{
  echo
  echo "Usage: `basename $0` [OPTION]"
  echo "OPTIONS"
  echo "	-d <install_dir>"
  echo "	  Sets the installation directory,  default is /usr/local."
  echo "	-n <ncpu>"
  echo "	  Sets the number of cpu to use for the compilation"
  echo "	-h"
  echo "	  Shows this help"
}

prompt_copyright()
{ 
  echo
  echo "Thanks for choosing RealOpInsight Workstation."
  echo
  echo "You are licensed to use this software under the terms of GNU GPL-v3 License."
  echo
  echo "Type 'y' to accept this license offer."
  echo "Type 'n' to decline this license offer."
  echo "Type 'r' to view this license offer."
  echo
  while true; do
    read -p "Do you accept the terms of the License ? y/N/r " rep
    case $rep in
	  r) more LICENSE ; echo ;;
	  y) break ;;
	  *) exit 0 ;; 
    esac
  done
}


check_prerequisites()
{
  echo -n "DEBUG : Checking qmake => ${QMAKE:=`which qmake`}... "
  if [ -z $QMAKE ]; then
    echo "no found"
    echo -n "DEBUG : Checking qmake-qt4 => ${QMAKE:=`which qmake-qt4`}... "
    if [ -z $QMAKE ]; then
      echo "no found"
      echo -n "DEBUG : Checking qmake-qt5 => ${QMAKE:=`which qmake-qt5`}... " 
    fi
  fi

  if [ -z $QMAKE ]; then
      echo "no found. FATAL."
      exit 1
  else
    echo "done"
  fi
 
  echo -n "DEBUG : Checking make => ${MAKE:=`which make`}... "
  [ -z $MAKE ] && echo "ERROR : make not found." && exit 1
  echo "done"
 
  echo -n "DEBUG : Checking C++ compiler => ${CXX:=`which g++`}... "
  [ -z $CXX ] && echo "ERROR : g++ not found." && exit 1
  echo "done"
 
  echo -n "DEBUG : Checking Graphviz => ${DOT:=`which dot`}... "
#  [ -z $DOT ] && echo "ERROR : dot not found." && exit 1
  echo "done"
}

install_default(){
  ${QMAKE} -config release ngrt4n.pro CONFIG+=gui-base CONFIG+=manager ${QT_CONFIG_EXT}
  make -Bj${NCPU} 1>>install.log
  make install 1>>install.log
}

install_editor(){
  ${QMAKE} -config release ngrt4n.pro CONFIG+=gui-base CONFIG+=editor ${QT_CONFIG_EXT}
  make -j${NCPU} 1>>install.log
  make install 1>>install.log
}

install_oc(){
  ${QMAKE} -config release ngrt4n.pro CONFIG+=gui-base CONFIG+=oc ${QT_CONFIG_EXT}
  make -j${NCPU} 1>>install.log
  make install 1>>install.log
}

install_workstation() {
  echo "==>Installing RealOpInsight Workstation..."  
  check_prerequisites
  echo "DEBUG : Installation directory => ${INSTALL_PREFIX}"
  echo -n "DEBUG : Current component => Manager..."
  install_default
  echo "done"
  
  echo -n "DEBUG : Current component => Editor..."
  install_editor
  echo "done"
  
  echo -n "DEBUG : Current component => Operator Console..."
  install_oc
  echo "done"
  echo "==>Installation completed"
}

NCPU=1
mflag=
while getopts m:d:n:zph name ; do
  case $name in
    d) export QT_CONFIG_EXT="${QT_CONFIG_EXT} CONFIG+=dflag" ;
       install_prefix="$OPTARG"
    ;;
    n) NCPU=$OPTARG
    ;;
    z) export QT_CONFIG_EXT="${QT_CONFIG_EXT} CONFIG+=minimal";
    ;;	
    p) export DISABLE_PROMPT="True";
    ;;	
    h) usage;
       exit 0
    ;;
    ?) usage
     exit 1
    ;;
  esac
done

# Set installation directory
#
if [ -z "${install_prefix}" ] ; then
  export INSTALL_PREFIX=/usr/local
else
  export INSTALL_PREFIX=${install_prefix}
fi

# Set the number of CPU required for compilation
#
if ! echo $NCPU | egrep -q '^[0-9]+$'; then
    echo "The option -n requires a number"
    exit 1
fi

export NCPU

if [ -z "$DISABLE_PROMPT" ]; then
  prompt_copyright
fi

echo "DEBUG: Initializing setup with $NCPU CPU..."

if [ `id -u` -ne 0 ]; then
  echo "DEBUG: You're performing a user mode installation"
  echo "WARNING: You must have read/write permissions on the target directory ($INSTALL_PREFIX)"
fi 

# Start installation
#
install_workstation

exit 0
