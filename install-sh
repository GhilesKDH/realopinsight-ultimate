# ------------------------------------------------------------------------ #
# Copyright (c) 2010-2012 Rodrigue Chakode (rodrigue.chakode@ngrt4n.com)   #
# Last Update : 13-05-2012												   #
#																		   #
# This file is part of NGRT4N (http://ngrt4n.com).						   #
#																		   #
# NGRT4N is free software: you can redistribute it and/or modify		   #
# it under the terms of the GNU General Public License as published by     #
# the Free Software Foundation, either version 3 of the License, or        #
# (at your option) any later version.									   #
#																		   #
# NGRT4N is distributed in the hope that it will be useful,                #
# but WITHOUT ANY WARRANTY; without even the implied warranty of		   #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the	           #
# GNU General Public License for more details.							   #
#																		   #
# You should have received a copy of the GNU General Public License		   #
# along with NGRT4N.  If not, see <http://www.gnu.org/licenses/>.		   #
#--------------------------------------------------------------------------# 

set -e

APP="ngrt4n"
APP_PREFIX="/usr/local"
#mkdir -p ${APP_PREFIX}/bin

# Print help
#
usage(){
  echo
  echo "Usage: `basename $0` [OPTION]"
  echo "OPTIONS"
  echo "	-module=broker"
  echo "	  Installs the broker module"
  echo "	-module=ui"
  echo "	  Installs the ui module"
#  echo "	-d <install_dir>"
#  echo "	  Sets the installation directory. Default is /usr"
  echo "	-h"
  echo "	  Shows this help"
}

install_broker(){
  make clean 1>/dev/null
  ncpu=$(lscpu -p | awk 'BEGIN{ncpu=0}{if ($1>=0 && $1<=9) ncpu++;}END{print ncpu}')
  
  echo -n "Checking prerequises..." 
  ./configure --prefix=/usr 1>/dev/null
  echo done
  
  echo -n "Compiling..."
  make -j${ncpu} 1>/dev/null
  echo done
  
  echo -n "Installation..."
  make install 1>/dev/null
  echo done
}

checking_uipreq(){
  echo -n "DEGUG : Checking qmake => ${QMAKE:=`which qmake`}... "
  [ -z $QMAKE ] && echo "ERROR : qmake not found." && exit 1
  echo "done"
 
  echo -n "DEGUG : Checking make => ${MAKE:=`which make`}... "
  [ -z $MAKE ] && echo "ERROR : make not found." && exit 1
  echo "done"
 
  echo -n "DEGUG : Checking c++ compiler => ${CXX:=`which g++`}... "
  [ -z $CXX ] && echo "ERROR : g++ not found." && exit 1
  echo "done"
 
  echo -n "DEGUG : Checking graphviz's dot utility => ${DOT:=`which dot`}... "
  [ -z $DOT ] && echo "ERROR : dot not found." && exit 1
  echo "done"
}

install_default(){
  ncpu=$(lscpu -p | awk 'BEGIN{ncpu=0}{if ($1>=0 && $1<=9) ncpu++;}END{print ncpu}')
  make clean 1>/dev/null
  
  echo -n "Checking prerequises..." 
  qmake -config release ngrt4n.pro CONFIG+=config-default
  echo done
  
  echo -n "Compiling..."
  make -j${ncpu} 1>/dev/null
  echo done
  
  echo -n "Installation..."
  make install 1>/dev/null
  echo done
}

install_editor(){
  ncpu=$(lscpu -p | awk 'BEGIN{ncpu=0}{if ($1>=0 && $1<=9) ncpu++;}END{print ncpu}')
  make clean 1>/dev/null

  echo -n "Compiling..."
  qmake -config release ngrt4n.pro CONFIG+=config-editor
  make -j${ncpu} 1>/dev/null
  echo done
  
  echo -n "Installation..."
  make install 1>/dev/null
  echo done
}

install_oc(){
  ncpu=$(lscpu -p | awk 'BEGIN{ncpu=0}{if ($1>=0 && $1<=9) ncpu++;}END{print ncpu}')
  make clean 1>/dev/null

  echo -n "Compiling..."
  qmake -config release ngrt4n.pro CONFIG+=config-oc
  make -j${ncpu} 1>/dev/null
  echo done
  
  echo -n "Installation..."
  make install 1>/dev/null
  echo done
}

install_ui() {
  checking_uipreq
  install_default
  install_editor
  install_oc
}

[ `id -u` -ne 0 ] && echo "ERROR : the installation must be carried out as root" && exit 1 

case $1 in
  -module=broker) install_broker ;;
  -module=ui) install_ui ;;
  -h) usage; exit 0;;
  *) echo "ERROR :: Bad usage" ; usage; exit 1 ;;
esac

exit 0