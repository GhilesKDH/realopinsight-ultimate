\documentclass[a4paper,10pt]{book}
\usepackage[utf8x]{inputenc}
\usepackage[dvips]{graphicx}
% declare the path(s) where your graphic files are
\graphicspath{{./images/}}

%opening
\title{NGRT4N Concept Guide}
\author{(c) ITSoftbyrc.com, Inc.}

\begin{document}

\maketitle

\tableofcontents

\section{About This Document}
This document describes the concepts that underly NGRT4N, the leading IT
Monitoring Reporting Tool on the market. It is intended for administrators and people who want to answer questions such as,  What is NGRT4N? How does it work? For those who have questions concerning its use, refer to user manual. 

\section{Overview of NGRT4N}
NGRT4N is a X-based GUI application that provides powerful reporting capabilities useful in operational environments such as data centers and network operations centers (NOC). 
The following list describes major NGRT4N features:

\begin{description}
\item [Support of Various Monitoring Solutions] 
NGRT4N is tailored to be loosely coupled with the underlying monitoring solution so to permit the support of various monitoring solutions. It currently supports Nagios, Groundwork, Centreon, Icinga, and all Nagios-derived solutions, but it will be extended in future versions to support other solutions such as Zabbix, Zenoss, Big4, etc.

\item [Dashboard at a Glance]
NGRT4N provides intuitive, friendly and easy to use graphical user interfaces (GUI). It provides dashboard components that allow operators to get real-time views on the health of the monitored systems and business processes, while being able to get more detailed information quickly. 

\item [Comprehensive Monitoring]
NGRT4N permits to customize the messages that are shown on the console when events appeared. This allows operators to get more comprehensive messages, against the approach consisting in showing the native plug-in output which can be crabbed. For example, instead of getting a message like \emph{"DISK CRITICAL - free space: / 5483 MB (28\% inode=67\%)"} on your console (according to the Nagios plug-in), you can have a more comprehensive message like \emph{"The free space available in the server <hostname/IP> root partition is less than 30\%"}. 

\item [Customizable Dashboards] 
According to your business process, your operator user-role, and whatever is relevant to you, NGRT4N allows you to select/specify what of the data collected by the monitoring engine should be retrieved and shown. NGRT4N enables an approach of reporting permiting to organize the content shown on operator dashboard in graph or flow of linked applications, systems, devices, and/or business processes. The content of the dashboard and all messages shown on event console are fully configurable through a WYSIWYG editor built in NGRT4N. 

\item [Secure Access to Monitoring Data]
On the one hand, the access to the NGRT4N console is subjected to authentication. On the other hand, operator workstations communicate with the monitoring server through a valid ssh connexions, thereby enabling the ciphering of the data exchanged between them.   
\end{description}


\section{How NGRT4N Work}
Here, we present the design NGRT4N of how it fits within a operational monitoring environment. 
 
\subsection{Design}
NGRT4N has been designed so to require low integration cost, while being usable with various monitoring solutions.  As introduced on the Figure below, it relies on the database or file in which the status data collected by the monitoring engine are stored . In the case of Nagios-derived solutions such as Nagios it self, Centreon, Groundwork Monitor, Icinga, etc., NGRT4N relies on the file named \emph{status.dat}.

The dashboards shown on operator consoles are based on XML configuration files. Each console and its related dashboard depend on a single XML file that specifies what data to retrieve, and how they will be organized to be shown on the operator console. 

In order to update the dashboard according to the status data collected by the underlying monitoring solution, NGRT4N provides an internal solution-aware \emph{Adapter or Broker}. The adapter is in charge to access the status database to retrieve the items specified in the configuration file. This process is achieved periodically according to a time interval defined by administrators, ideally according to the monitoring interval.   

NGRT4N provides a built-in editor to help to create or edit the configuration files of dashboards.  

\begin{figure}[!t]
\centering
\includegraphics[width=6in,height=4in]{images/software-integration.png}
\caption{Architecture of NGRT4N fiting with the monitoring solution}
\end{figure} 

\subsection{How To Fits NGRT4N in a Monitoring Environment}
A typical model of integrating NGRT4N within a monitoring environment is shown on the Figure below. In this model, the NGRT4N stack is installed on the monitoring server. Being a X-based application, users would access NGRT4N through the network. To work, this requires two important settings. First, on the server, a SSH daemon needs to be set up so to permit X Forwarding. Second, in order to run the software, users need to access the server through SSH connexions that enable X Forwarding.   

\begin{figure}[!t]
\centering
\includegraphics[width=5.5in]{images/physical-integration.png}
\caption{Typical use case for integreting NGRT4N within a monitoring environment}
\end{figure}

\section{User Interfaces}
The dashboard consists of four main components: an Event Console, a Tree and a Graph Explorers (that enable in-depth exploration), a Statistics Pane that allow you to quickly access to detailed information concerning the health of those systems.  

